- Finir le générateur d'entités
--> Il faut créer des tableaux dans lesquels stocker les field et relationships pour ensuite les créer dans l'entité
--> Il faut pouvoir appeller la commande de génération des getters/setters de Doctrine, sinon il faut réécrire cette partie
--> Ecrire le constructeur __contruct par défaut
--> Gérer les trois types de relations : il faudra donc au moment de la génération tout étudier pour générer dans les deux sens ???
Pour bidirectionnel, on génère que dans l'entité de base, pas dans les autres, c'est au dev de les implémenter ?
On implémente que du mono directionnel dans un premier temps

- Gestion du menu via un CRUD (Item et sub-items)
--> On gère un ou plusieurs menus ? Plusieurs menu
--> On doit pouvoir gérer le contenu de chaque menu, ainsi que l'ordre des menu

Peux-t'on modifier les entrées de menu intégrées par les modules ?
--> Nom, mais on peux les déplacer. Par contre à chaque réinstallation du module il y a risque de modifier l'ordre
d'apparition du module. Il faut donc que la fonction de génération du menu génère une fois et dans la vérification s'assurer
juste que le nom de l'entrée de menu soit présente, la position ne doit pas être modifiée.

--> Implémenter la sécurité (connexion et droits)
    Il faut un système de droits assez poussé pour chaque module, autre que le simple accès ?
    Oui, il faut pouvoir le prévoir. Chaque vue et/ou action doit pouvoir être paramétrée
    --> Il serai donc judicieux de créer des groupes d'utilisateurs

--> Après génération d'entités, il faut faire une génération de formulaire CRUD

/*------------------------------------------------------------------------------------------------*/
| 27/01/2014
/*------------------------------------------------------------------------------------------------*/
- Mettre le bon langage en plugin CodeMirror selon le type de fichier
- Pouvoir créer fichiers / répertoires
- Pouvoir supprimer des fichiers / répertoires (croix au survol sur le menu avec popup confirmation)